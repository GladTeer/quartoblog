---
    title: "Lab 4 - Multinomial Regression - Questions"
    image: bike.png
    author:
      - name: Suyog Chandramouli
    date: last-modified
    format:
      html:
        self-contained: true
        anchor-sections: true
        code-tools: true
        code-fold: true
        fig-width: 8
        fig-height: 4
        code-block-bg: "#f1f3f5"
        code-block-border-left: "#31BAE9"
        mainfont: Source Sans Pro
        theme: journal
        toc: true
        toc-depth: 3
        toc-location: left
        captions: true
        cap-location: margin
        table-captions: true
        tbl-cap-location: margin
        reference-location: margin
      pdf:
        pdf-engine: lualatex
        toc: false
        number-sections: true
        number-depth: 2
        top-level-division: section
        reference-location: document
        listings: false
        header-includes:
          \usepackage{marginnote, here, relsize, needspace, setspace}
          \def\it{\emph}

    comments:
      hypothesis: false

    execute:
      warning: false
      message: false
---

Lab Goal: Predict voting frequency using demographic variables Data source: FiveThirtyEight "Why Many Americans Don't Vote" survey Method: Multinomial logistic regression

## Data

The data for this assignment comes from an online Ipsos survey that was conducted for the FiveThirtyEight article ["Why Many Americans Don't Vote"](https://projects.fivethirtyeight.com/non-voters-poll-2020-election/). You can read more about the survey design and respondents in the README of the [GitHub repo](https://github.com/fivethirtyeight/data/tree/master/non-voters) for the data.

Respondents were asked a variety of questions about their political beliefs, thoughts on multiple issues, and voting behavior. We will focus on using the demographic variables and someone's party identification to understand whether a person is a probable voter.

The variables we'll focus on were (definitions from the codebook in data set GitHub repo):

-   `ppage`: Age of respondent

-   `educ`: Highest educational attainment category.\

-   `race`: Race of respondent, census categories. Note: all categories except Hispanic were non-Hispanic.

-   `gender`: Gender of respondent

-   `income_cat`: Household income category of respondent

-   `Q30`: Response to the question "Generally speaking, do you think of yourself as a..."

    -   1: Republican
    -   2: Democrat
    -   3: Independent
    -   4: Another party, please specify
    -   5: No preference
    -   -1: No response

-   `voter_category`: past voting behavior:

    -   **always**: respondent voted in all or all-but-one of the elections they were eligible in
    -   **sporadic**: respondent voted in at least two, but fewer than all-but-one of the elections they were eligible in
    -   **rarely/never**: respondent voted in 0 or 1 of the elections they were eligible in

You can read in the data directly from the GitHub repo:

```{r}
library(nnet)
library(car)
library(tidyverse)
library(emmeans)
library(ggeffects)
library(knitr)
library(patchwork)
library(broom)
library(parameters)
library(easystats)
```

```{r}

voter_data <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/non-voters/nonvoters_data.csv")
```

# Lab

-   The variable `Q30` contains the respondent's political party identification. Make a new variable that simplifies `Q30` into four categories: "Democrat", "Republican", "Independent", "Other" ("Other" also includes respondents who did not answer the question).

```{r}
voter_data <- voter_data %>%
  mutate(pol_ident_new = case_when(
    Q30==1 ~ "Rep", 
    Q30==2 ~ "Dem", 
    Q30==3 ~ "Indep", 
    TRUE ~ "Other"
  ))



```

-   The variable `voter_category` identifies the respondent's past voter behavior. Relevel the variable to make rarely/never the baseline level, followed by sporadic, then always

```{r}
#Enter your code
# Figuring out what unique variables are available
levels(as.factor(voter_data$voter_category))
# Reordering
voter_data$voter_category = relevel(as.factor(voter_data$voter_category), ref = "sporadic")

# Recheck level order
levels(as.factor(voter_data$voter_category))


```

-   Center the age variable to make the intercept more interepretable. That is, so that it reflects the log-odds for an average-aged person rather than a 0-year old person

```{r}
# enter code 

voter_data=voter_data %>%
  mutate(ppage_centered = ppage - mean(ppage))



```

-   In the [FiveThirtyEight article](https://projects.fivethirtyeight.com/non-voters-poll-2020-election/), the authors include visualizations of the relationship between the voter category and demographic variables such as race, age, education, etc. Select two demographic variables. For each variable, try to replicate the visualizations and interpret the plot to describe its relationship with voter category. Have fun with it: https://www.mikelee.co/posts/2020-02-08-recreate-fivethirtyeight-chicklet-stacked-bar-chart-in-ggplot2.

```{r}
# library
library(ggplot2)
library(viridis)
library(cowplot)

# Enter code
plot1=ggplot(voter_data, aes(x = voter_category, y = ppage)) +
  geom_col(fill = "Blue")+
  labs(title = " Voter Category vs. PPage",
       x = "Voter Category",
       y = "Age")


```

```{r}
# Enter code
plot2=ggplot(voter_data, aes(x = voter_category, fill = income_cat)) +
  geom_bar() +
  labs(title = "Voter Category vs. Income Category Counts",
       x = "Voter Category",
       y = "Count")


```

The plots can be combined into a single plot using the patchwork package.

```{r}
library(patchwork)
# Enter code
plot1 + plot2

```

-   Fit a model using mean-centered age, race, gender, income, and education to predict voter category. Show the code used to fit the model, but do **not** display the model output.

```{r}

   library(nnet)
    
    #Enter code
    model <- multinom(voter_category ~ ppage_centered+race+gender+income_cat+educ , data = voter_data) 
    summary(model)

```

-   *Should party identification be added to the model?*
-   #Hint: Use an anova test to make the determination

```{r}
#Enter code
    model2 <- multinom(voter_category ~ ppage_centered+race+gender+income_cat+educ+pol_ident_new , data = voter_data) 
summary(model2)

anova(model,model2)


```

```         
> #Enter answer based on your code: Yes! There is significant gain in variance explained
```

**Use the model you select for the remainder of the assignment**.

## LRT

-   Run the full model and report overall significance of each of the terms

    ```{r}
    Anova(model2)
    ```

## Marginal Effects Political Group - Emmeans

```{r}
#Get estimated marginal means from the model

#using 
multinomial_analysis_age <- emmeans(model2, ~ pol_ident_new|voter_category)


coefs = contrast(regrid(multinomial_analysis_age, "log"),"trt.vs.ctrl1",  by="pol_ident_new")
# you can add a parameter to the above command, ref = newbaseline, if you want to change baseline

update(coefs, by = "contrast") %>% 
  kable(format = "markdown", digits = 3)
```

## Marginal Effects of Education - Emmeans

```{r}
#Enter code
multinomial_analysis_educ <- emmeans(model2, ~ educ|voter_category)

coefs = contrast(regrid(multinomial_analysis_educ, "log"),"trt.vs.ctrl1",  by="educ")
# you can add a parameter to the above command, ref = newbaseline, if you want to change baseline

update(coefs, by = "contrast") %>% 
  kable(format = "markdown", digits = 3)
```

-   Next, plot the predicted probabilities of voter category as a function of Age and Party ID

    ```{r}
      ggemmeans(model2, terms = c("ppage_centered")) %>% 
      ggplot(., aes(x = x, y = predicted , fill = response.level)) +
      geom_area() + 
      geom_rug(sides = "b", position = "jitter", alpha = .5) + 
      labs(x = "\nAge", y = "Predicted Probablity\n", title = "Predicted Probabilities of Voting Frequency by Age") +
      scale_fill_manual(
        name = NULL,
        values = c("always" = "#F6B533", "sporadic" = "#D07EA2", "rarely/never" = "#9854F7"),
        labels = c("RARELY OR NEVER VOTE    ", "SOMETIMES VOTE    ", "ALMOST ALWAYS VOTE    "),
        breaks = c("rarely/never", "sporadic", "always")
      ) +
      theme_minimal()

    ```

Plot predicted probabilities as a function of education and voting frequency.

```{r}
ggemmeans(model2, terms=c("pol_ident_new")) %>%
  ggplot(aes(x = x, y = predicted, fill = response.level))+
  geom_bar(stat = "identity" ) + 
   geom_text(aes(label = round(predicted, 3)), color="white", position = position_fill(vjust = 0.5),size=5) + 
  labs(x="polID", "Predicted Probablity") + 
  scale_fill_viridis(discrete = TRUE)
```

```{r}
ggemmeans(model2, terms=c("educ")) %>%
  ggplot(aes(x = x, y = predicted, fill = response.level))+
  geom_bar(stat = "identity" ) + 
   geom_text(aes(label = round(predicted, 3)), color="white", position = position_fill(vjust = 0.5),size=5) + 
  labs(x="Education", "Predicted Probablity") + 
  scale_fill_viridis(discrete = TRUE)
```

## Write-up

### Differences between political groups and voting behavior - Emmeans

```{r}
multi_an <- emmeans(model2, ~ pol_ident_new|voter_category)

coefs = contrast(regrid(multi_an, "log"),"trt.vs.ctrl1",  by="pol_ident_new")

update(coefs, by = "contrast") %>% 
  kable(format = "markdown", digits = 3)

# get difference between yes-no and fair-excellent
contrast(coefs, "revpairwise", by = "contrast") %>%
  kable(format = "markdown", digits = 3)
```

### Differences between education level and voting behavior - Emmeans

Last part of the assignment: Interpret the results from running the following code for your model

```{r}
multi_an <- emmeans(model2, ~ educ|voter_category)

coefs = contrast(regrid(multi_an, "log"),"trt.vs.ctrl1",  by="educ")

update(coefs, by = "contrast") %>% 
  kable(format = "markdown", digits = 3)

# get difference between yes-no and fair-excellent
contrast(coefs, "revpairwise", by = "contrast") %>%
  kable(format = "markdown", digits = 3)
```

Enter your interpretation here: People with higher education show a stronger contrast between "sporadic voters" vs. "always" or "rarely/never" voters. As education level goes up, the more frequently people vote. However, people with college education are less likely to vote frequently, as compared to sporadically.
